{"version":3,"sources":["components/Planet.js","components/Main.js","utils/api.js","components/CharacterRend.js","components/Character.js","images/logo.png","components/Header.js","components/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["Planet","props","history","useHistory","className","onClick","onPlanet","name","climate","diameter","gravity","population","orbital_period","rotation_period","terrain","citizens","characters","setHeroes","push","Main","planets","map","planet","url","residents","api","config","this","_url","_headers","headers","fetch","method","then","res","_getResponseData","character","replace","ok","json","console","log","Promise","reject","status","CharacterRend","hero","gender","height","mass","hair_color","skin_color","birth_year","Character","React","useState","setGender","type","heroes","Header","src","Logo","alt","Footer","App","setCharacters","setPlanets","setPlanet","useEffect","getAllPlanets","data","results","catch","err","forEach","id","getCharacter","prev","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNA4CeA,MAzCf,SAAgBC,GACd,IAAMC,EAAUC,cAkBhB,OACE,mCACE,yBAASC,UAAU,UAAnB,SACE,sBAAKA,UAAU,qBAAqBC,QAnB1C,WACEJ,EAAMK,SAAS,CACbC,KAAMN,EAAMM,KACZC,QAASP,EAAMO,QACfC,SAAUR,EAAMQ,SAChBC,QAAST,EAAMS,QACfC,WAAYV,EAAMU,WAClBC,eAAgBX,EAAMW,eACtBC,gBAAiBZ,EAAMY,gBACvBC,QAASb,EAAMa,UAEjBb,EAAMc,SAASd,EAAMe,YACrBf,EAAMgB,UAAU,IAChBf,EAAQgB,KAAK,eAMT,UACE,oBAAId,UAAU,iBAAd,SAAgCH,EAAMM,OACtC,oBAAGH,UAAU,gBAAb,mDAAsCH,EAAMO,WAC5C,oBAAGJ,UAAU,gBAAb,oGAA+CH,EAAMQ,YACrD,oBAAGL,UAAU,gBAAb,kFAA4CH,EAAMS,WAClD,oBAAGN,UAAU,gBAAb,sHACuBH,EAAMW,kBAE7B,oBAAGR,UAAU,gBAAb,qEAAyCH,EAAMU,cAC/C,oBAAGP,UAAU,gBAAb,oGACoBH,EAAMY,mBAE1B,oBAAGT,UAAU,gBAAb,4EAA2CH,EAAMa,mBCR5CK,MA1Bf,SAAclB,GACZ,OACE,qBAAKG,UAAU,WAAf,SACGH,EAAMmB,QAAQC,KAAI,SAACC,GAClB,OACE,cAAC,EAAD,CACEL,UAAWhB,EAAMgB,UACjBV,KAAMe,EAAOf,KACbM,gBAAiBS,EAAOT,gBACxBD,eAAgBU,EAAOV,eACvBH,SAAUa,EAAOb,SACjBD,QAASc,EAAOd,QAChBE,QAASY,EAAOZ,QAChBC,WAAYW,EAAOX,WACnBG,QAASQ,EAAOR,QAChBS,IAAKD,EAAOC,IACZP,WAAYM,EAAOE,UACnBlB,SAAUL,EAAMK,SAChBS,SAAUd,EAAMc,iB,gBCgBbU,EARH,IA7BZ,WACE,WAAYC,GAAS,oBACnBC,KAAKC,KAAOF,EAAOH,IACnBI,KAAKE,SAAWH,EAAOI,QAH3B,iDAME,WAAiB,IAAD,OACd,OAAOC,MAAMJ,KAAKC,KAAO,WAAY,CACnCI,OAAQ,MACRF,QAASH,KAAKE,WACbI,MAAK,SAACC,GAAD,OAAS,EAAKC,iBAAiBD,QAV3C,0BAaE,SAAaE,GAAY,IAAD,OACtB,OAAOL,MAAMK,EAAUC,QAAQ,OAAQ,SAAU,CAC/CL,OAAQ,MACRF,QAASH,KAAKE,WACbI,MAAK,SAACC,GAAD,OAAS,EAAKC,iBAAiBD,QAjB3C,8BAoBE,SAAiBA,GACf,OAAKA,EAAII,GAIFJ,EAAIK,QAHTC,QAAQC,IAAI,oBACLC,QAAQC,OAAR,gDAA0BT,EAAIU,cAvB3C,KA6BY,CAAQ,CAElBrB,IAAK,yBACLO,QAAS,CACP,eAAgB,sB,QCfLe,MAhBf,SAAuB5C,GACrB,OACE,mCACE,sBAAKG,UAAU,qBAAf,UACE,oBAAGA,UAAU,gBAAb,iCAAmCH,EAAM6C,KAAKvC,QAC9C,oBAAGH,UAAU,gBAAb,iCAAmCH,EAAM6C,KAAKC,UAC9C,oBAAG3C,UAAU,gBAAb,uCAAoCH,EAAM6C,KAAKE,UAC/C,oBAAG5C,UAAU,gBAAb,iCAAmCH,EAAM6C,KAAKG,QAC9C,oBAAG7C,UAAU,gBAAb,sEAA0CH,EAAM6C,KAAKI,cACrD,oBAAG9C,UAAU,gBAAb,gEAAyCH,EAAM6C,KAAKK,cACpD,oBAAG/C,UAAU,gBAAb,kFAA4CH,EAAM6C,KAAKM,oBC8ChDC,MAvDf,SAAmBpD,GACjB,MAA4BqD,IAAMC,SAAS,OAA3C,mBAAOR,EAAP,KAAeS,EAAf,KAUA,OACE,qCACE,sBAAKpD,UAAU,kBAAf,UACE,oBAAIA,UAAU,iBAAd,SAAgCH,EAAMqB,OAAOf,OAC7C,oBAAGH,UAAU,gBAAb,mDAAsCH,EAAMqB,OAAOd,WACnD,oBAAGJ,UAAU,gBAAb,oGACoBH,EAAMqB,OAAOb,YAEjC,oBAAGL,UAAU,gBAAb,kFAA4CH,EAAMqB,OAAOZ,WACzD,oBAAGN,UAAU,gBAAb,sHACuBH,EAAMqB,OAAOV,kBAEpC,oBAAGR,UAAU,gBAAb,qEAAyCH,EAAMqB,OAAOX,cACtD,oBAAGP,UAAU,gBAAb,oGACoBH,EAAMqB,OAAOT,mBAEjC,oBAAGT,UAAU,gBAAb,4EAA2CH,EAAMqB,OAAOR,cAE1D,qBAAKV,UAAU,kBAAf,SACE,oBAAIA,UAAU,iBAAd,sEAEF,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,iBAAd,iFACA,wBAAQA,UAAU,kBAAkBqD,KAAK,QAAQpD,QA/BvD,WACEmD,EAAU,SA8BN,kBAGA,wBAAQpD,UAAU,kBAAkBqD,KAAK,QAAQpD,QA9BvD,WACEmD,EAAU,WA6BN,uBAIF,yBAASpD,UAAU,WAAnB,SACGH,EAAMyD,OAAOrC,KAAI,SAACe,GACjB,MAAe,QAAXW,GAGAA,IAAWX,EAAUW,OAFhB,cAAC,EAAD,CAAeD,KAAMV,SAE9B,WCjDK,MAA0B,iCCW1BuB,MATf,WAGI,OACI,wBAAQvD,UAAU,SAAlB,SACA,qBAAKA,UAAU,eAAewD,IAAKC,EAAMC,IAAI,gCCAtCC,MAPf,WACI,OACA,wBAAQ3D,UAAU,SAAlB,SACI,mBAAGA,UAAU,eAAb,0CC4FO4D,MApFf,WACE,MAAoCV,IAAMC,SAAS,IAAnD,mBAAOvC,EAAP,KAAmBiD,EAAnB,KACA,EAA4BX,IAAMC,SAAS,IAA3C,mBAAOG,EAAP,KAAezC,EAAf,KACA,EAA8BqC,IAAMC,SAAS,IAA7C,mBAAOnC,EAAP,KAAgB8C,EAAhB,KACA,EAA4BZ,IAAMC,SAAS,CACzChD,KAAM,GACNC,QAAS,GACTC,SAAU,GACVC,QAAS,GACTE,eAAgB,GAChBD,WAAY,GACZE,gBAAiB,GACjBC,QAAS,KARX,mBAAOQ,EAAP,KAAe6C,EAAf,KA4CA,OAjCAb,IAAMc,WAAU,WACd3C,EACG4C,gBACApC,MAAK,SAACqC,GACLJ,EAAWI,EAAKC,YAEjBC,OAAM,SAACC,GACNjC,QAAQC,IAAR,qHAAqCgC,EAArC,WAEH,IAEHnB,IAAMc,WAAU,WACdpD,EAAW0D,SAAQ,SAACC,GAClBlD,EACGmD,aAAaD,GACb1C,MAAK,SAACa,GACL7B,GAAU,SAAC4D,GAAD,4BAAcA,GAAd,CAAoB/B,UAE/B0B,OAAM,SAACC,GACNjC,QAAQC,IAAR,qHAAqCgC,EAArC,cAGL,CAACzD,IASJwB,QAAQC,IAAIiB,GACZlB,QAAQC,IAAIzB,GAEV,mCACE,sBAAKZ,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO0E,KAAK,UAAZ,UACE,qBAAK1E,UAAU,kBAAf,SACE,oBAAIA,UAAU,iBAAd,2GAEF,cAAC,EAAD,CACEkB,OAAQA,EACRhB,SArBd,SAAkBgB,GAChB6C,EAAU7C,IAqBEF,QAASA,EACTL,SAnBd,SAAkBA,GAChBkD,EAAclD,IAmBFE,UAAWA,OAGf,cAAC,IAAD,CAAO6D,KAAK,aAAZ,SACE,cAAC,EAAD,CACExD,OAAQA,EACRN,WAAYA,EACZ0C,OAAQA,MAGZ,cAAC,IAAD,CAAOoB,KAAK,IAAZ,SACE,cAAC,IAAD,CAAUC,GAAG,mBAInB,cAAC,EAAD,UC7EOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c5fe3544.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Planet(props) {\r\n  const history = useHistory();\r\n\r\n  function handleClick() {\r\n    props.onPlanet({\r\n      name: props.name,\r\n      climate: props.climate,\r\n      diameter: props.diameter,\r\n      gravity: props.gravity,\r\n      population: props.population,\r\n      orbital_period: props.orbital_period,\r\n      rotation_period: props.rotation_period,\r\n      terrain: props.terrain,\r\n    });\r\n    props.citizens(props.characters);\r\n    props.setHeroes([])\r\n    history.push(\"/character\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <article className=\"element\">\r\n        <div className=\"element__container\" onClick={handleClick}>\r\n          <h3 className=\"element__title\">{props.name}</h3>\r\n          <p className=\"element__text\">Климат: {props.climate}</p>\r\n          <p className=\"element__text\">Диаметр планеты: {props.diameter}</p>\r\n          <p className=\"element__text\">Сила тяжести: {props.gravity}</p>\r\n          <p className=\"element__text\">\r\n            Орбитальный период: {props.orbital_period}\r\n          </p>\r\n          <p className=\"element__text\">Население: {props.population}</p>\r\n          <p className=\"element__text\">\r\n            Период вращения: {props.rotation_period}\r\n          </p>\r\n          <p className=\"element__text\">Вид планеты: {props.terrain}</p>\r\n        </div>\r\n      </article>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Planet;\r\n","import React from \"react\";\r\nimport Planet from \"../components/Planet.js\";\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <div className=\"elements\">\r\n      {props.planets.map((planet) => {\r\n        return (\r\n          <Planet\r\n            setHeroes={props.setHeroes}\r\n            name={planet.name}\r\n            rotation_period={planet.rotation_period}\r\n            orbital_period={planet.orbital_period}\r\n            diameter={planet.diameter}\r\n            climate={planet.climate}\r\n            gravity={planet.gravity}\r\n            population={planet.population}\r\n            terrain={planet.terrain}\r\n            url={planet.url}\r\n            characters={planet.residents}\r\n            onPlanet={props.onPlanet}\r\n            citizens={props.citizens}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","export class Api {\n  constructor(config) {\n    this._url = config.url;\n    this._headers = config.headers;\n  }\n\n  getAllPlanets() {\n    return fetch(this._url + \"planets/\", {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  getCharacter(character) {\n    return fetch(character.replace(\"http\", \"https\"), {\n      method: \"GET\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      console.log(\"everything is ok\");\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n}\n\nconst api = new Api({\n  //создаем экземпляр класса API\n  url: \"https://swapi.dev/api/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;\n","import React from \"react\";\r\n\r\nfunction CharacterRend(props) {\r\n  return (\r\n    <>\r\n      <div className=\"element__container\">\r\n        <p className=\"element__text\">Имя: {props.hero.name}</p>\r\n        <p className=\"element__text\">Пол: {props.hero.gender}</p>\r\n        <p className=\"element__text\">Рост: {props.hero.height}</p>\r\n        <p className=\"element__text\">Вес: {props.hero.mass}</p>\r\n        <p className=\"element__text\">Цвет волос: {props.hero.hair_color}</p>\r\n        <p className=\"element__text\">Цвет кожи: {props.hero.skin_color}</p>\r\n        <p className=\"element__text\">Год рождения: {props.hero.birth_year}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CharacterRend;\r\n","import React from \"react\";\r\nimport CharacterRend from \"../components/CharacterRend.js\";\r\n\r\nfunction Character(props) {\r\n  const [gender, setGender] = React.useState(\"all\");\r\n\r\n  function setMale() {\r\n    setGender(\"male\");\r\n  }\r\n\r\n  function setFemale() {\r\n    setGender(\"female\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"element__planet\">\r\n        <h3 className=\"element__title\">{props.planet.name}</h3>\r\n        <p className=\"element__text\">Климат: {props.planet.climate}</p>\r\n        <p className=\"element__text\">\r\n          Диаметр планеты: {props.planet.diameter}\r\n        </p>\r\n        <p className=\"element__text\">Сила тяжести: {props.planet.gravity}</p>\r\n        <p className=\"element__text\">\r\n          Орбитальный период: {props.planet.orbital_period}\r\n        </p>\r\n        <p className=\"element__text\">Население: {props.planet.population}</p>\r\n        <p className=\"element__text\">\r\n          Период вращения: {props.planet.rotation_period}\r\n        </p>\r\n        <p className=\"element__text\">Вид планеты: {props.planet.terrain}</p>\r\n      </div>\r\n      <div className=\"element__planet\">\r\n        <h3 className=\"element__title\">Персонажи</h3>\r\n      </div>\r\n      <div className=\"element__select\">\r\n        <h3 className=\"element__title\">Выберите пол</h3>\r\n        <button className=\"element__button\" type=\"click\" onClick={setMale}>\r\n          Male\r\n        </button>\r\n        <button className=\"element__button\" type=\"click\" onClick={setFemale}>\r\n          Female\r\n        </button>\r\n      </div>\r\n      <article className=\"elements\">\r\n        {props.heroes.map((character) => {\r\n          if (gender === \"all\") {\r\n            return <CharacterRend hero={character} />;\r\n          }\r\n          if (gender === character.gender) {\r\n            return <CharacterRend hero={character} />;\r\n          }\r\n        })}\r\n      </article>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Character;\r\n","export default __webpack_public_path__ + \"static/media/logo.dd762443.png\";","import Logo from '../images/logo.png'\r\n\r\nfunction Header () {\r\n \r\n\r\n    return (\r\n        <header className=\"header\">\r\n        <img className=\"header__logo\" src={Logo} alt=\"лого\"/>\r\n        </header>\r\n    )}\r\n\r\nexport default Header","function Footer () {\r\n    return (\r\n    <footer className=\"footer\">\r\n        <p className=\"footer__text\">&copy;2021 Igor Skorokhodov</p> \r\n    </footer>\r\n    )}\r\n\r\nexport default Footer","import Main from \"../components/Main.js\";\nimport api from \"../utils/api.js\";\nimport React from \"react\";\nimport { Route, Switch, BrowserRouter, Redirect } from \"react-router-dom\";\nimport Character from \"../components/Character.js\";\nimport Header from \"../components/Header.js\";\nimport Footer from \"../components/Footer.js\";\n\n\n\n\nfunction App() {\n  const [characters, setCharacters] = React.useState([]);\n  const [heroes, setHeroes] = React.useState([]);\n  const [planets, setPlanets] = React.useState([]);\n  const [planet, setPlanet] = React.useState({\n    name: \"\",\n    climate: \"\",\n    diameter: \"\",\n    gravity: \"\",\n    orbital_period: \"\",\n    population: \"\",\n    rotation_period: \"\",\n    terrain: \"\",\n  });\n\n  React.useEffect(() => {\n    api\n      .getAllPlanets()\n      .then((data) => {\n        setPlanets(data.results);\n      })\n      .catch((err) => {\n        console.log(`упс, возникла ошибка! ${err}}`);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    characters.forEach((id) => {\n      api\n        .getCharacter(id)\n        .then((hero) => {\n          setHeroes((prev) => [...prev, hero]);\n        })\n        .catch((err) => {\n          console.log(`упс, возникла ошибка! ${err}}`);\n        });\n    });\n  }, [characters]);\n\n  function onPlanet(planet) {\n    setPlanet(planet);\n  }\n\n  function citizens(citizens) {\n    setCharacters(citizens);\n  }\n  console.log(heroes);\n  console.log(characters);\n  return (\n    <>\n      <div className=\"page\">\n        <Header />\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/planet\">\n              <div className=\"element__select\">\n                <h3 className=\"element__title\">Выберите планету</h3>\n              </div>\n              <Main\n                planet={planet}\n                onPlanet={onPlanet}\n                planets={planets}\n                citizens={citizens}\n                setHeroes={setHeroes}\n              />\n            </Route>\n            <Route path=\"/character\">\n              <Character\n                planet={planet}\n                characters={characters}\n                heroes={heroes}\n              />\n            </Route>\n            <Route path=\"*\">\n              <Redirect to=\"/planet\" />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n        <Footer />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}